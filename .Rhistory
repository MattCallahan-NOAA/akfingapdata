library(akfingapdata)
library(magrittr)
create_token("Callahan_token")
token<-create_token("Callahan_token.txt")
get_gap_length()
library(tidyverse)
library(httr)
library(jsonlite)
get_gap_length()
get_gap_cruise()
get_gap_biomass()
token<-create_token("Callahan_token.txt")
token<-create_token("cheryll_token.txt")
token<-create_token("cheryl_token.txt")
get_gap_biomass()
get_gap_length()
get_gap_cruise()
get_gap_taxonomic_classification()
token<-create_token("Callahan_token.txt")
url <- "https://apex.psmfc.org/akfin/data_marts/akmp/gap_biomass?"
httr::GET(url=url,
add_headers(Authorization = token))
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_biomass?"
httr::GET(url=url,
add_headers(Authorization = token))
httr::GET(url=url,
add_headers(Authorization = token))
httr::GET(url=url,
add_headers(Authorization = token))
url1 <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_biomass?"
url2 <- "https://apex.psmfc.org/akfin/data_marts/akm/abl_tag_recovery_report?tag_num=1"
httr::GET(url=url2,
add_headers(Authorization = token))
httr::GET(url=url1,
add_headers(Authorization = token))
# Secret string text file needs to be in your working R directory
secret <- jsonlite::base64_enc( readChar("cheryl_token.txt",nchars=1e6) )
# Get token from API
req <- httr::POST("https://apex.psmfc.org/akfin/data_marts/oauth/token",
httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
),
body = "grant_type=client_credentials"
);
#  Create authentication error message
httr::stop_for_status(req, "Something broke.")
token <- paste("Bearer", httr::content(req)$access_token)
httr::GET(url=url1,
add_headers(Authorization = token))
httr::GET(url=url2,
add_headers(Authorization = token))
# Secret string text file needs to be in your working R directory
secret <- jsonlite::base64_enc( readChar("Callahan_token.txt",nchars=1e6) )
# Get token from API
req <- httr::POST("https://apex.psmfc.org/akfin/data_marts/oauth/token",
httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
),
body = "grant_type=client_credentials"
);
#  Create authentication error message
httr::stop_for_status(req, "Something broke.")
token <- paste("Bearer", httr::content(req)$access_token)
url1 <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_biomass?"
httr::GET(url=url1,
add_headers(Authorization = token))
library(akfingapdata)
library(tidyverse)
library(httr)
library(jsonlite)
token<-create_token("Callahan_token.txt")
metadata<-get_gap_metadata_column()
# download species_code
taxa<- get_gap_taxonomics()
# download species_code
taxa<- get_gap_taxonomic_classification()
# find species codes for shortraker rockfish
taxa %>% filter(grepl("shortraker", tolower(common_name)))
# download survey, area, and strata tables
survey<-get_gap_survey_design()
area<-get_gap_area()
stratum<-get_gap_stratum_groups()
#combine spatial lookup tables
stratum<-stratum %>%
left_join(survey %>%
# remove year specific information from survey, we only need the region codes
group_by(survey) %>%
summarize(survey_definition_id=max(survey_definition_id)),
by="survey_definition_id") %>%
left_join(area,  by=c("area_id"="area_id", "survey_definition_id"="survey_definition_id", "design_year"="design_year"))
# look for the western Gulf
# 805
stratum %>%
filter(survey=="GOA",
type=="REGULATORY AREA",
grepl("western", tolower(area_name))
)
# No agecomp data for this area/species
goasr_ages<-get_gap_agecomp(survey_definition_id = 47,
area_id = 805,
species_code = 30576,
start_year=1990,
end_year=2023)
goasr_sizecomp<-get_gap_sizecomp(survey_definition_id = 47,
area_id = 805,
species_code = 30576,
start_year=1990,
end_year=2023)
# No agecomp for shortraker at that area, run gulfwide instead.
head(get_gap_agecomp(survey_definition_id = 47,
area_id = 99903,
species_code = 30576,
start_year=1990,
end_year=2023))
# Get rougheye and shortraker biomass for the WGOA
taxa %>% filter(grepl("rougheye", common_name))
goa_resr_biomass<-get_gap_biomass(survey_definition_id = 47,
area_id = 805,
species_code = c(30576, 30051),
start_year=1990,
end_year=2023)
head(goa_resr_biomass)
gap_haul<-get_gap_haul()
gap_cruise<-get_gap_cruise()
head(gap_haul)
45+20+5
45+15+20
45+15+5+50
library(getPass)
?getPass
21000000/350000000
.06*365
21.9*24
525.6/365
token<-create_token("claire_token.txt")
library(akfingapdata)
library(magrittr)
token<-create_token("claire_token.txt")
area<-get_gap_area()
library(httr)
library(jsonlite)
token<-create_token("claire_token.txt")
area<-get_gap_area()
area<-get_gap_catch()
token<-create_token("Callahan_token.txt")
area<-get_gap_catch()
area<-get_gap_catch()
get_gap_taxonomic_classification()
token<-create_token("Callahan_token.txt")
library(akfingapdata)
library(httr)
library(jsonlite)
library(dplyr)
library(magrittr)
token<-create_token("Callahan_token.txt")
area<-get_gap_lenth()
area<-get_gap_length()
token<-create_token("Callahan_token.txt")
goasr_length<-get_gap_length(survey_definition_id = 47,
area_id = 805,
species_code = 30576,
start_year=1990,
end_year=2023)
View(goasr_length)
105000/135
49*12*10
32*120*0.6
32*120*6
library(httr)
library(dplyr)
library(jsonlite)
library(magrittr)
library(sf)
library(ggplot)
# get haul table
token<-create_token("Callahan_token.txt")
library(akfingapdata)
# get haul table
token<-create_token("Callahan_token.txt")
haul <- get_gap_haul()
aihaul <- haul %>%
filter(survey_definition_id = 52)
aihaul <- haul %>%
filter(survey_definition_id == 52)
haul <- haul %>%
st_as_sf(coords = c('longitude_dd_start', 'latitude_dd_start'),
crs = 4326, agr = 'constant'))
haul <- haul %>%
st_as_sf(coords = c('longitude_dd_start', 'latitude_dd_start'),
crs = 4326, agr = 'constant')
haul <- haul %>%
st_join(nmfs_dd, join = "st_intersect")
library(akmarineareas2)
haul <- haul %>%
st_join(nmfs_dd, join = "st_intersect")
haul <- haul %>%
st_join(nmfs_dd, join = st_intersect)
haul <- haul %>%
st_join(nmfs_dd, join = st_intersects)
haul <- haul %>%
st_join(nmfs_dd %>% st_make_valid(), join = st_intersects)
haul %>%
group_by(NMFS_REP_AREA) %>%
summarize(haulcount = n())
cruise <- get_gap_cruise()
haul <- get_gap_haul()
# get haul table
token<-create_token("Callahan_token.txt")
haul <- get_gap_haul()
aihaul <-haul %>%
left_join(cruise, by="cruisejoin") %>%
filter(survey_definition_id == "52")
aihaul <- aihaul %>%
st_as_sf(coords = c('longitude_dd_start', 'latitude_dd_start'),
crs = 4326, agr = 'constant')
aihaul <-haul %>%
left_join(cruise, by="cruisejoin") %>%
filter(survey_definition_id == "52")
aihaul <-haul %>%
left_join(cruise, by="cruisejoin") %>%
filter(survey_definition_id == 52)
View(cruise)
cruise <- get_gap_cruise(survey_dfinition_id = 52)
unique(crusie$survey_definition_id)
unique(cruise$survey_definition_id)
cruise <- get_gap_cruise(survey_definition_id = 52)
# get haul table
token<-create_token("Callahan_token.txt")
cruise <- get_gap_cruise(survey_definition_id = 52)
View(cruise)
cruise <- get_gap_cruise()
aihaul <- haul %>%
left_join(cruise, by="cruisejoin") %>%
filter(survey_definition_id == 52)
aihaul <- aihaul %>%
st_as_sf(coords = c('longitude_dd_start', 'latitude_dd_start'),
crs = 4326, agr = 'constant')
aihaul <- aihaul %>%
st_join(nmfs_dd %>% st_make_valid(), join = st_intersects)
haul %>%
group_by(NMFS_REP_AREA) %>%
summarize(haulcount = n())
aihaul %>%
group_by(NMFS_REP_AREA) %>%
summarize(haulcount = n())
aihaul %>%
tibble() %>%
group_by(NMFS_REP_AREA) %>%
summarize(haulcount = n())
# convert hauls to spatial object
haul <- haul %>%
st_as_sf(coords = c('longitude_dd_start', 'latitude_dd_start'),
crs = 4326, agr = 'constant')
# do point in polygon operation with NMFS areas
haul <- haul %>%
st_join(nmfs_dd %>% st_make_valid(), join = st_intersects)
# plot
ak_dd <- ak %>%
st_transform(crs=4326)
ggplot()+
geom_sf(data=ak_dd %>% st_shift_longitude())+
geom_sf(data=nmfs_dd %>% st_shift_longitude())+
geom_sf(data=haul %>% st_shift_longitude(), aes(color=survey_definition_id))
library(tidyverse)
ggplot()+
geom_sf(data=ak_dd %>% st_shift_longitude())+
geom_sf(data=nmfs_dd %>% st_shift_longitude())+
geom_sf(data=haul %>% st_shift_longitude(), aes(color=survey_definition_id))
haul <- get_gap_haul()
cruise <- get_gap_cruise()
haul <- haul %>%
left_join(cruise, by="cruisejoin")
# convert hauls to spatial object
haul <- haul %>%
st_as_sf(coords = c('longitude_dd_start', 'latitude_dd_start'),
crs = 4326, agr = 'constant')
# do point in polygon operation with NMFS areas
haul <- haul %>%
st_join(nmfs_dd %>% st_make_valid(), join = st_intersects)
# plot
ak_dd <- ak %>%
st_transform(crs=4326)
ggplot()+
geom_sf(data=ak_dd %>% st_shift_longitude())+
geom_sf(data=nmfs_dd %>% st_shift_longitude())+
geom_sf(data=haul %>% st_shift_longitude(), aes(color=survey_definition_id))
ggplot()+
geom_sf(data=ak_dd %>% st_shift_longitude())+
geom_sf(data=nmfs_dd %>% st_shift_longitude())+
geom_sf(data=haul %>% st_shift_longitude(),
aes(color=as.factor(survey_definition_id)), size=1)+
xlim(c(166, 210))+ylim(c(50,60))
ggplot()+
geom_sf(data=ak_dd %>% st_shift_longitude())+
geom_sf(data=nmfs_dd %>%
remove_dateline() %>%
st_shift_longitude())+
geom_sf_label(data=nmfs_dd %>%
st_shift_longitude(),
aes(label=NMFS_REP_AREA))+
geom_sf(data=haul %>% st_shift_longitude(),
aes(color=as.factor(survey_definition_id)), size=0.6)+
xlim(c(166, 205))+ylim(c(50,60))+
theme_bw()
ggplot()+
geom_sf(data=ak_dd)+
geom_sf(data=nmfs_dd,
size=1.5, fill=NA)+
geom_sf_text(data=nmfs_dd,
aes(label=NMFS_REP_AREA))+
geom_sf(data=haul,
aes(color=as.factor(survey_definition_id)), size=0.6)+
xlim(c(-175, -160))+ylim(c(50,60))+
theme_bw()
ggplot()+
geom_sf(data=ak_dd)+
geom_sf(data=nmfs_dd,
size=1.5, fill=NA)+
geom_sf_text(data=nmfs_dd,
aes(label=NMFS_REP_AREA))+
geom_sf(data=haul,
aes(color=as.factor(survey_definition_id)), size=0.5)+
xlim(c(-175, -160))+ylim(c(52,57))+
theme_bw()
ggplot()+
geom_sf(data=ak_dd)+
geom_sf(data=nmfs_dd,
size=1.5, fill=NA)+
geom_sf_text(data=nmfs_dd,
aes(label=NMFS_REP_AREA))+
geom_sf(data=haul,
aes(color=as.factor(survey_definition_id)), size=0.5)+
#xlim(c(-175, -160))+ylim(c(52,57))+
xlim(c(-168, -164))+ylim(c(54,55))+
theme_bw()
# summarize AI survey by NMFS area
haul %>%
tibble() %>%
filter(survey_definition_id == 52) %>%
group_by(NMFS_REP_AREA) %>%
summarize(haulcount = n())
haul <- get_gap_haul()
cruise <- get_gap_cruise()
haul <- haul %>%
left_join(cruise, by="cruisejoin")
# convert hauls to spatial object
haul <- haul %>%
st_as_sf(coords = c('longitude_dd_end', 'latitude_dd_end'),
crs = 4326, agr = 'constant')
get_gap_biomass_test<-function(survey_definition_id, area_id, species_code, start_year=1990, end_year=3000) {
# paste(... collapse=",") puts commas between vector elements
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_biomass?"
query<- if(missing(area_id)) {
#species_code <- paste(species_code, collapse = ",")
list(survey_definition_id<-survey_definition_id, species_code=species_code, start_year=start_year, end_year=end_year)
}
if(missing(species_code)) {
#area_id <- paste(area_id, collapse = ",")
list(survey_definition_id<-survey_definition_id, area_id=area_id, start_year=start_year, end_year=end_year)
}
if( missing(area_id) & missing(species_code) ) {
list(survey_definition_id<-survey_definition_id, start_year=start_year, end_year=end_year)
}
else {
#area_id <- paste(area_id, collapse = ",")
#species_code <- paste(species_code, collapse = ",")
list(survey_definition_id<-survey_definition_id, area_id=area_id, species_code=species_code, start_year=start_year, end_year=end_year)
}
return(query)
}
test <- get_gap_biomass_test(survey_definition_id = 47, species_code = 21740, area_id = 610)
get_gap_biomass_test<-function(survey_definition_id, area_id, species_code, start_year=1990, end_year=3000) {
# paste(... collapse=",") puts commas between vector elements
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_biomass?"
if(missing(area_id)) {
#species_code <- paste(species_code, collapse = ",")
query <- list(survey_definition_id<-survey_definition_id, species_code=species_code, start_year=start_year, end_year=end_year)
}
if(missing(species_code)) {
#area_id <- paste(area_id, collapse = ",")
query <- list(survey_definition_id<-survey_definition_id, area_id=area_id, start_year=start_year, end_year=end_year)
}
if( missing(area_id) & missing(species_code) ) {
query <- list(survey_definition_id<-survey_definition_id, start_year=start_year, end_year=end_year)
}
else {
#area_id <- paste(area_id, collapse = ",")
#species_code <- paste(species_code, collapse = ",")
query <- list(survey_definition_id<-survey_definition_id, area_id=area_id, species_code=species_code, start_year=start_year, end_year=end_year)
}
return(query)
}
test <- get_gap_biomass_test(survey_definition_id = 47, species_code = 21740, area_id = 610)
test <- get_gap_biomass_test(#survey_definition_id = 47,
species_code = 21740,
area_id = 610)
test <- get_gap_biomass_test(survey_definition_id = 47,
#species_code = 21740,
area_id = 610)
get_gap_biomass_test<-function(survey_definition_id, area_id, species_code, start_year=1990, end_year=3000) {
# paste(... collapse=",") puts commas between vector elements
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_biomass?"
if(missing(area_id)) {
#species_code <- paste(species_code, collapse = ",")
query <- list(survey_definition_id=survey_definition_id, species_code=species_code, start_year=start_year, end_year=end_year)
}
if(missing(species_code)) {
#area_id <- paste(area_id, collapse = ",")
query <- list(survey_definition_id=survey_definition_id, area_id=area_id, start_year=start_year, end_year=end_year)
}
if( missing(area_id) & missing(species_code) ) {
query <- list(survey_definition_id=survey_definition_id, start_year=start_year, end_year=end_year)
}
else {
#area_id <- paste(area_id, collapse = ",")
#species_code <- paste(species_code, collapse = ",")
query <- list(survey_definition_id=survey_definition_id, area_id=area_id, species_code=species_code, start_year=start_year, end_year=end_year)
}
return(query)
}
test <- get_gap_biomass_test(survey_definition_id = 47,
#species_code = 21740,
area_id = 610)
test <- get_gap_biomass_test(survey_definition_id = 47,
species_code = 21740,
#area_id = 610
)
test <- get_gap_biomass_test(survey_definition_id = 47,
species_code = 21740
#area_id = 610
)
test <- get_gap_biomass_test(survey_definition_id = 47
,species_code = 21740
,area_id = 610
)
library(akfingapdata)
library(tidyverse)
library(httr)
library(jsonlite)
token<-create_token("Callahan_token.txt")
get_gap_cpue<-function(survey_definition_id=98,  species_code=21740, start_year=1990, end_year=3000) {
# paste(... collapse=",") puts commas between vector elements
species_code <- paste(species_code, collapse = ",")
survey_definition_id<-paste(survey_definition_id, collapse = ",")
query <- list(survey_definition_id=survey_definition_id,  species_code=species_code, start_year=start_year, end_year=end_year)
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_cpue?"
httr::content(
httr::GET(url=url, query=query,
add_headers(Authorization = token)),
type = "application/json") %>%
# convert to data frame
dplyr::bind_rows() %>%
dplyr::rename_with(tolower)
}
cpue<-get_gap_cpue(survey_definition_id = 98, species_code = 21470, start_year=2023, end_year=2023)
cpue<-get_gap_cpue(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
get_gap_catch<-function(survey_definition_id=98,  species_code=21740, start_year=1990, end_year=3000) {
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_catch?"
species_code <- paste(species_code, collapse = ",")
survey_definition_id<-paste(survey_definition_id, collapse = ",")
query <- list(survey_definition_id=survey_definition_id, species_code=species_code, start_year=start_year, end_year=end_year)
httr::content(
httr::GET(url=url, query=query,
add_headers(Authorization = token)),
type = "application/json") %>%
# convert to data frame
dplyr::bind_rows() %>%
dplyr::rename_with(tolower)
}
catch<-get_gap_catch(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
cpue<-get_gap_cpue(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
catch<-get_gap_catch(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
length<-get_gap_length(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
get_gap_specimen<-function(survey_definition_id=98, species_code=21740, start_year=1990, end_year=3000) {
# paste(... collapse=",") puts commas between vector elements
species_code <- paste(species_code, collapse = ",")
survey_definition_id<-paste(survey_definition_id, collapse = ",")
query <- list(survey_definition_id=survey_definition_id, species_code=species_code, start_year=start_year, end_year=end_year)
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_specimen"
httr::content(
httr::GET(url=url, query=query,
add_headers(Authorization = token)),
type = "application/json") %>%
# convert to data frame
dplyr::bind_rows() %>%
dplyr::rename_with(tolower)
}
get_gap_length<-function(survey_definition_id=98, species_code=21740, start_year=1990, end_year=3000) {
# paste(... collapse=",") puts commas between vector elements
# paste(... collapse=",") puts commas between vector elements
species_code <- paste(species_code, collapse = ",")
survey_definition_id<-paste(survey_definition_id, collapse = ",")
query <- list(survey_definition_id=survey_definition_id, species_code=species_code, start_year=start_year, end_year=end_year)
url <- "https://apex.psmfc.org/akfin/data_marts/gap_products/gap_length?"
httr::content(
httr::GET(url=url, query=query,
add_headers(Authorization = token)),
type = "application/json") %>%
# convert to data frame
dplyr::bind_rows() %>%
dplyr::rename_with(tolower)
}
length<-get_gap_length(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
specimen<-get_gap_specimen(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
library(akfingapdata)
library(akfingapdata)
token<-create_token("Callahan_token.txt")
cpue<-get_gap_cpue(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
length<-get_gap_length(survey_definition_id = 98, species_code = 21740, start_year=2023, end_year=2023)
devtools::install_github("MattCallahan-NOAA/akfingapdata")
